dotenv -e .env -- serverless invoke local --function sendOtp --path input.json

{
        "mobile": "0779999999",
        "name": "kalana",
        "email": "kalana@picktodoor.com",
        "gender": "Male",
        "otpId": "679fae1518ef4fd6bace0ab6"
}

1. implement sendOTP
    - response only OTPID
2. create a model to store OTP
    - countryCode
    - phoneNumber
    - OTP
    - expireAt

3. verifyOtpAndCreateCustomer
    inputs
        - otpId
        - OTP
        - customer details


---------------

bring connectToDatatbase into middleware alike


create controller layer.


----
create dlivery form

npx dotenv -e .env -- serverless invoke local --function createDeliveryForm --path input.json

{
    "identity": {
        "username": "558ea2e5-6d33-425e-8987-70646888136a"
    },
    "arguments": {
        "createdBy": "67a23e163bb90a2f38fc52d3",
        "pickup": {
            "savedLocation": null,
            "contactName": "John Doe",
            "contactNo": "1234567890",
            "address": "123, Main Street, New York, NY",
            "unitNo": "Apt 123",
            "note": "Ring the bell twice"
        },
        "itemType":"67b00c7057fecdc4d033ef99"
    }
}

--
get delivery Form
npx dotenv -e .env -- serverless invoke local --function getDeliveryForm --path input.json

{
    "identity": {
        "username": "558ea2e5-6d33-425e-8987-70646888136a"
    },
    "arguments": {
        "formId": "67b00fa325e665d992137c88"
    }
}


----
get updateDeliveryData Form
npx dotenv -e .env -- serverless invoke local --function updateDeliveryData --path input.json

{
    "identity": {
        "username": "558ea2e5-6d33-425e-8987-70646888136a"
    },
    "arguments": {
        "formId": "67b00fa325e665d992137c88",
        "recipient": {
            "savedLocation": null,
            "customer": null,
            "contactName": "John Doe",
            "contactNo": "1234567890",
            "address": "123, Main Street, New York, NY",
            "unitNo": "Apt 123",
            "note": "Ring the bell twice"
        },
        "itemType":"67b00c7057fecdc4d033ef99"
    }
}

---
get getLocationByUser Form
npx dotenv -e .env -- serverless invoke local --function getLocationByUser --path input.json

{
    "identity": {
        "username": "558ea2e5-6d33-425e-8987-70646888136a"
    },
    "arguments": {
        "userId": "67a23e163bb90a2f38fc52d0"
    }
}


npx dotenv -e .env -- serverless invoke local --function createDelivery --path input.json
{
    "identity": {
        "username": "558ea2e5-6d33-425e-8987-70646888136a"
    },
    "arguments": {
        "createdBy": "67a731daa6098b3107e2d995",
        "sender": "67a731daa6098b3107e2d995",
        "recipient": "67a23e163bb90a2f38fc52d3",
        "deliveryType": "CUSTOMER-CUSTOMER",
        "pickup": {
          "contactName": "pissu poosa",
          "contactNo": "0778887677",
          "address": "address",
          "unitNo": "",
          "note": "my home address",
          "savedLocation": "67a73f58bd494c02c7023fbe"
        },
        "dropoff": {
          "contactName": "Devaka DD",
          "contactNo": "07776665656",
          "address": "asd asd adas asd asd asd",
          "unitNo": "",
          "note": "go up",
          "savedLocation": "67b0ddc86844da1c2bd399c0"
        },
        "itemType": "67b00c7057fecdc4d033ef99",
        "message": "Handle with care"
    }
      
}

npx dotenv -e .env -- serverless invoke local --function getDeliveriesByUserId --path input.json

{
    "identity": {
        "username": "558ea2e5-6d33-425e-8987-70646888136a"
    },
    "arguments": {
        "userId": "67a23e163bb90a2f38fc52d0"
    }
}
